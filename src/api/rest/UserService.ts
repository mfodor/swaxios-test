/* tslint:disable */

/**
 * This file was automatically generated by "Swaxios".
 * It should not be modified by hand.
 */

import {AxiosInstance, AxiosRequestConfig} from 'axios';
import {User} from '../interfaces/';

export class UserService {
  private readonly apiClient: AxiosInstance;

  constructor(apiClient: AxiosInstance) {
    this.apiClient = apiClient;
  }

  /**
   * @param body Created user object
   */
  createUser = async (body: User): Promise<void> => {
    const config: AxiosRequestConfig = {
      data: {
        ...body,
      },
      method: 'post',
      url: '/user',
    };
    await this.apiClient.request(config);
  };

  /**
   * @param username The name that needs to be fetched. Use user1 for testing.
   */
  getUserByName = async (username: string): Promise<User> => {
    const config: AxiosRequestConfig = {
      method: 'get',
      url: `/user/${username}`,
    };
    const response = await this.apiClient.request<User>(config);
    return response.data;
  };

  /**
   * @param username name that need to be updated
   * @param body Updated user object
   */
  updateUser = async (username: string, body: User): Promise<void> => {
    const config: AxiosRequestConfig = {
      data: {
        ...body,
      },
      method: 'put',
      url: `/user/${username}`,
    };
    await this.apiClient.request(config);
  };

  /**
   * @param username The name that needs to be deleted
   */
  deleteUser = async (username: string): Promise<void> => {
    const config: AxiosRequestConfig = {
      method: 'delete',
      url: `/user/${username}`,
    };
    await this.apiClient.request(config);
  };
}
