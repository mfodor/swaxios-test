/* tslint:disable */

/**
 * This file was automatically generated by "Swaxios".
 * It should not be modified by hand.
 */

import {AxiosInstance, AxiosRequestConfig} from 'axios';
import {Pet} from '../interfaces/';

export class PetService {
  private readonly apiClient: AxiosInstance;

  constructor(apiClient: AxiosInstance) {
    this.apiClient = apiClient;
  }

  /**
   * @param body Pet object that needs to be added to the store
   */
  addPet = async (body: Pet): Promise<void> => {
    const config: AxiosRequestConfig = {
      data: {
        ...body,
      },
      method: 'post',
      url: '/pet',
    };
    await this.apiClient.request(config);
  };

  /**
   * @param body Pet object that needs to be added to the store
   */
  updatePet = async (body: Pet): Promise<void> => {
    const config: AxiosRequestConfig = {
      data: {
        ...body,
      },
      method: 'put',
      url: '/pet',
    };
    await this.apiClient.request(config);
  };

  /**
   * @param petId ID of pet to return
   */
  getPetById = async (petId: number): Promise<Pet> => {
    const config: AxiosRequestConfig = {
      method: 'get',
      url: `/pet/${petId}`,
    };
    const response = await this.apiClient.request<Pet>(config);
    return response.data;
  };

  /**
   * @param petId ID of pet that needs to be updated
   * @param name Updated name of the pet
   * @param status Updated status of the pet
   */
  updatePetWithForm = async (petId: number): Promise<void> => {
    const config: AxiosRequestConfig = {
      method: 'post',
      url: `/pet/${petId}`,
    };
    await this.apiClient.request(config);
  };

  /**
   * @param petId Pet id to delete
   */
  deletePet = async (petId: number): Promise<void> => {
    const config: AxiosRequestConfig = {
      method: 'delete',
      url: `/pet/${petId}`,
    };
    await this.apiClient.request(config);
  };
}
